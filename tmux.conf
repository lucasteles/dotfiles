unbind C-b
set -g prefix C-s
bind-key C-s send-prefix

# Activity
set -g set-titles on
set-option -g set-titles-string '#W: #T'
setw -g monitor-activity on
set -g visual-activity off
set-option -g focus-events on

# Tabs
set -g base-index 1

# Mouse
set -g mouse on

set-option -g default-terminal "screen-256color"

set-option -sg escape-time 10
set -ga terminal-overrides ',*256col*:Tc'

# Open new panes in current path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"

    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    bind-key -T copy-mode-vi 'C-\' select-pane -l

    # pane movement
    bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
    bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"


    # Smart pane resizing with awareness of Vim splits.
    # See: https://github.com/melonmanchan/vim-tmux-resizer
    is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
    bind-key -n M-C-h if-shell "$is_vim" "send-keys M-C-h"  "resize-pane -L 10"
    bind-key -n M-C-j if-shell "$is_vim" "send-keys M-C-j"  "resize-pane -D 5"
    bind-key -n M-C-k if-shell "$is_vim" "send-keys M-C-k"  "resize-pane -U 5"
    bind-key -n M-C-l if-shell "$is_vim" "send-keys M-C-l"  "resize-pane -R 10"
    bind-key -n M-Left  if-shell "$is_vim" "send-keys M-h" "resize-pane -L 10"
    bind-key -n M-Right if-shell "$is_vim" "send-keys M-l" "resize-pane -R 10"
    bind-key -n M-Up    if-shell "$is_vim" "send-keys M-k" "resize-pane -U 5"
    bind-key -n M-Down  if-shell "$is_vim" "send-keys M-j" "resize-pane -D 5"

    # vim-like pane resizing
    bind -r M-C-k resize-pane -U
    bind -r M-C-j resize-pane -D
    bind -r M-C-h resize-pane -L
    bind -r M-C-l resize-pane -R

    # vim mode
    set-window-option -g mode-keys vi
    bind-key -T copy-mode-vi 'v' send -X begin-selection
    bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel 'xclip -in -selection clipboard'

    # Bind escape to copy mode
    bind Escape copy-mode

    # p = paste
    unbind p
    bind p paste-buffer

    # loud or quiet?
    set-option -g visual-activity off
    set-option -g visual-bell off
    set-option -g visual-silence off
    set-window-option -g monitor-activity off
    set-option -g bell-action none

    ## Status bar design
    # The panes {
    set -g pane-border-style fg=colour238,bg=colour235
    set -g pane-active-border-style fg=colour245,bg=colour236
    # }

    # The statusbar {
    set -g status-justify left
    set -g status-position top
    set -g status-style fg=colour255,bg=colour234,dim
    set -g status-left ''
    set -g status-right '#[fg=colour255,bg=colour239,bold] #[fg=colour255,bg=colour241,bold] %d/%m #[fg=colour255,bg=colour240,bold] %H:%M:%S '
    set -g status-right-length 50
    set -g status-left-length 20
    set -g status-interval 1
    set -g status on

    # Toogle statusbar
    bind v set-option -g status

    # window status
    setw -g window-status-style fg=colour255,bg=colour238,bold
    setw -g window-status-bell-style fg=colour255,bg=colour1,bold
    # }

    # Tab name as current folder name
    setw -g window-status-current-format '#I#[fg=colour250]:#[fg=colour255]#(pwd="#{pane_current_path}"; echo ${pwd####*/})#[fg=colour1]#F'
    setw -g window-status-format '#I#[fg=colour244]:#[fg=colour250]#(pwd="#{pane_current_path}"; echo ${pwd####*/})#[fg=colour244]#F'

    # The messages {
    set -g message-style fg=colour232,bg=colour1,bold
    set -g message-command-style fg=yellow,bg=black
    # }

    # List of plugins
    set -g @plugin 'tmux-plugins/tpm'
    set -g @plugin 'tmux-plugins/tmux-sensible'
    set -g @plugin 'tmux-plugins/tmux-yank'

    set-option -g history-limit 8000
    # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
    run '~/.tmux/plugins/tpm/tpm'
